<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="document">
    <element name="document">
      <optional>
        <attribute name="identifier"/>
      </optional>
      <ref name="bibdata"/>
      <ref name="sections"/>
      <zeroOrMore>
        <ref name="references"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="bibdata">
    <a:documentation>Bibliographic description of a document, used as metadata, expressed in the Relaton model</a:documentation>
    <element name="bibdata">
      <ref name="BibData"/>
    </element>
  </define>
  <define name="sections">
    <element name="sections">
      <oneOrMore>
        <ref name="section"/>
      </oneOrMore>
    </element>
  </define>
  <define name="section">
    <a:documentation>Section: groups of blocks within text, which can also contain other sections</a:documentation>
    <element name="section">
      <ref name="Basic-Section"/>
      <zeroOrMore>
        <ref name="section">
          <a:documentation>Sections contained within the current section. The relation is recursive,
so the hierarchical arrangement of sections can be arbitrarily deep</a:documentation>
        </ref>
      </zeroOrMore>
    </element>
  </define>
  <define name="LanguageType">
    <a:documentation>Two-letter language code taken from ISO-639, indicating the language in which the content is written</a:documentation>
    <text/>
  </define>
  <define name="ScriptType">
    <a:documentation>Four-letter script code taken from ISO-15924, indicating the script in which the content is written</a:documentation>
    <text/>
  </define>
  <define name="Basic-Section">
    <a:documentation>Group of blocks within text, which is a leaf node in the hierarchical organisation of text (does not contain any sections of its own)</a:documentation>
    <ref name="OptionalId"/>
    <optional>
      <attribute name="language">
        <ref name="LanguageType"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="script">
        <ref name="ScriptType"/>
      </attribute>
    </optional>
    <optional>
      <ref name="section-title">
        <a:documentation>Title of the section</a:documentation>
      </ref>
    </optional>
    <zeroOrMore>
      <ref name="BasicBlock">
        <a:documentation>Blocks, containing the textual content of the section
(but excluding subsections, which are only present in Hierarchical Sections)</a:documentation>
      </ref>
    </zeroOrMore>
  </define>
  <define name="references">
    <a:documentation>Sections containing zero or more bibliographical items (as described in Relaton), along with any prefatory text</a:documentation>
    <element name="references">
      <ref name="OptionalId"/>
      <optional>
        <ref name="section-title">
          <a:documentation>Title of section</a:documentation>
        </ref>
      </optional>
      <zeroOrMore>
        <ref name="BasicBlock">
          <a:documentation>Prefatory text</a:documentation>
        </ref>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="bibitem">
          <a:documentation>Bibliographical items included in the References section</a:documentation>
        </ref>
      </zeroOrMore>
    </element>
  </define>
  <define name="section-title">
    <a:documentation>Title of a section</a:documentation>
    <element name="title">
      <zeroOrMore>
        <ref name="TextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="BasicBlock">
    <choice>
      <ref name="paragraph-with-footnote"/>
      <ref name="table"/>
      <ref name="formula"/>
      <ref name="admonition"/>
      <ref name="ol"/>
      <ref name="ul"/>
      <ref name="dl"/>
      <ref name="figure"/>
      <ref name="quote"/>
      <ref name="sourcecode"/>
      <ref name="example"/>
      <ref name="review"/>
      <ref name="pre"/>
      <ref name="note"/>
      <ref name="pagebreak"/>
      <ref name="hr"/>
      <ref name="bookmark"/>
      <ref name="amend"/>
    </choice>
  </define>
  <define name="BasicBlockNoId">
    <choice>
      <ref name="paragraph-with-footnote-no-id"/>
      <ref name="table-no-id"/>
      <ref name="formula-no-id"/>
      <ref name="admonition-no-id"/>
      <ref name="ol-no-id"/>
      <ref name="ul-no-id"/>
      <ref name="dl-no-id"/>
      <ref name="figure-no-id"/>
      <ref name="quote-no-id"/>
      <ref name="sourcecode-no-id"/>
      <ref name="example-no-id"/>
      <ref name="review"/>
      <ref name="pre-no-id"/>
      <ref name="note-no-id"/>
      <ref name="pagebreak"/>
      <ref name="hr"/>
      <ref name="bookmark"/>
      <ref name="amend"/>
    </choice>
  </define>
  <define name="amend">
    <element name="amend">
      <ref name="AmendType"/>
    </element>
  </define>
  <define name="AmendType">
    <ref name="OptionalId"/>
    <attribute name="change">
      <choice>
        <value>add</value>
        <value>modify</value>
        <value>delete</value>
        <value>replace</value>
      </choice>
    </attribute>
    <optional>
      <attribute name="path"/>
    </optional>
    <optional>
      <attribute name="path_end"/>
    </optional>
    <optional>
      <attribute name="title"/>
    </optional>
    <optional>
      <element name="location">
        <zeroOrMore>
          <choice>
            <ref name="locality"/>
            <ref name="localityStack"/>
          </choice>
        </zeroOrMore>
      </element>
    </optional>
    <optional>
      <element name="description">
        <zeroOrMore>
          <ref name="BasicBlock"/>
        </zeroOrMore>
      </element>
    </optional>
    <optional>
      <element name="newcontent">
        <ref name="OptionalId"/>
        <zeroOrMore>
          <ref name="BasicBlock"/>
        </zeroOrMore>
      </element>
    </optional>
    <zeroOrMore>
      <ref name="classification"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="contributor"/>
    </zeroOrMore>
  </define>
  <define name="classification">
    <element name="classification">
      <ref name="classification_tag"/>
      <ref name="classification_value"/>
    </element>
  </define>
  <define name="classification_tag">
    <element name="tag">
      <text/>
    </element>
  </define>
  <define name="classification_value">
    <element name="value">
      <text/>
    </element>
  </define>
  <define name="paragraph">
    <a:documentation>Default block of textual content. 
Unlike the case for other document models, paragraphs _cannot_
contain other blocks, such as lists, tables, or figures: they are modelled as a basic building block of text
Does not contain foonotes. While most paragraphs in a document can contain footnotes (paragraph-with-footnote),
the distinction is necessary, as footnotes are not appropriate for all instances of paragraph content 
in a document (e.g. sourcecode annotations)</a:documentation>
    <element name="p">
      <ref name="ParagraphType"/>
    </element>
  </define>
  <define name="Alignments">
    <a:documentation>The alignment of the paragraph against the margins of the document</a:documentation>
    <choice>
      <value>left</value>
      <value>right</value>
      <value>center</value>
      <value>justified</value>
    </choice>
  </define>
  <define name="RequiredId">
    <a:documentation>Mandatory anchor of element, to be used for cross-references within the document</a:documentation>
    <attribute name="id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="OptionalId">
    <a:documentation>Optional anchor of element</a:documentation>
    <optional>
      <attribute name="id">
        <data type="ID"/>
      </attribute>
    </optional>
  </define>
  <define name="ParagraphAttrs">
    <optional>
      <attribute name="align">
        <a:documentation>The alignment of the paragraph against the margins of the document</a:documentation>
        <ref name="Alignments"/>
      </attribute>
    </optional>
  </define>
  <define name="ParagraphType">
    <ref name="RequiredId"/>
    <ref name="ParagraphAttrs"/>
    <ref name="ParagraphBody"/>
  </define>
  <define name="ParagraphBody">
    <a:documentation>Inline elements constituting the content of the paragraph, excluding footnotes</a:documentation>
    <zeroOrMore>
      <ref name="TextElement">
        <a:documentation>Inline elements constituting the content of the paragraph</a:documentation>
      </ref>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="ParagraphFnBody">
    <a:documentation>Inline elements constituting the content of the paragraph, including footnotes</a:documentation>
    <zeroOrMore>
      <choice>
        <ref name="TextElement">
          <a:documentation>Inline elements constituting the content of the paragraph</a:documentation>
        </ref>
        <ref name="fn">
          <a:documentation>Footnotes interspersed with paragraph content</a:documentation>
        </ref>
      </choice>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="paragraph-no-id">
    <a:documentation>Paragraph containing no footnotes: optional ID attributes (for use in Relaton, metadata) </a:documentation>
    <element name="p">
      <ref name="OptionalId"/>
      <ref name="ParagraphAttrs"/>
      <ref name="ParagraphBody"/>
    </element>
  </define>
  <define name="paragraph-with-footnote">
    <a:documentation>A paragraph which may contain footnotes.</a:documentation>
    <element name="p">
      <ref name="RequiredId"/>
      <ref name="ParagraphAttrs"/>
      <ref name="ParagraphFnBody"/>
    </element>
  </define>
  <define name="paragraph-with-footnote-no-id">
    <a:documentation>A paragraph which may contain footnotes optional ID attributes (for use in Relaton, metadata)</a:documentation>
    <element name="p">
      <ref name="OptionalId"/>
      <ref name="ParagraphAttrs"/>
      <ref name="ParagraphFnBody"/>
    </element>
  </define>
  <define name="note">
    <element name="note">
      <ref name="RequiredId"/>
      <ref name="NoteAttr"/>
      <ref name="NoteBody"/>
    </element>
  </define>
  <define name="note-no-id">
    <element name="note">
      <ref name="OptionalId"/>
      <ref name="NoteAttr"/>
      <ref name="NoteNoIdBody"/>
    </element>
  </define>
  <define name="NoteAttr">
    <empty/>
  </define>
  <define name="NoteBody">
    <oneOrMore>
      <ref name="paragraph"/>
    </oneOrMore>
  </define>
  <define name="NoteNoIdBody">
    <oneOrMore>
      <ref name="paragraph-no-id"/>
    </oneOrMore>
  </define>
  <define name="review">
    <element name="review">
      <ref name="RequiredId"/>
      <attribute name="reviewer"/>
      <optional>
        <attribute name="type"/>
      </optional>
      <optional>
        <attribute name="date">
          <data type="dateTime"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="from">
          <data type="IDREF"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="to">
          <data type="IDREF"/>
        </attribute>
      </optional>
      <oneOrMore>
        <ref name="paragraph"/>
      </oneOrMore>
    </element>
  </define>
  <define name="NumberingAttributes">
    <optional>
      <attribute name="unnumbered">
        <a:documentation>Do not number this block in rendering</a:documentation>
        <data type="boolean"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="subsequence">
        <a:documentation>Define a subsequence for numbering of this block; e.g. if this block would be numbered
as 7, but it has a subsequence value of XYZ, this block, and all consecutive blocks
of the same class and with the same subsequence value, will be numbered consecutively
with the same number and in a subsequence: 7a, 7b, 7c etc</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="formula">
    <element name="formula">
      <ref name="RequiredId"/>
      <ref name="FormulaAttr"/>
      <ref name="FormulaBody"/>
    </element>
  </define>
  <define name="formula-no-id">
    <element name="formula">
      <ref name="OptionalId"/>
      <ref name="FormulaAttr"/>
      <ref name="FormulaNoIdBody"/>
    </element>
  </define>
  <define name="FormulaAttr">
    <ref name="NumberingAttributes"/>
    <optional>
      <attribute name="inequality">
        <data type="boolean"/>
      </attribute>
    </optional>
  </define>
  <define name="FormulaBody">
    <ref name="stem"/>
    <optional>
      <ref name="dl"/>
    </optional>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="FormulaNoIdBody">
    <ref name="stem"/>
    <optional>
      <ref name="dl-no-id"/>
    </optional>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="quote">
    <element name="quote">
      <ref name="RequiredId"/>
      <ref name="QuoteAttr"/>
      <ref name="QuoteBody"/>
    </element>
  </define>
  <define name="quote-no-id">
    <element name="quote">
      <ref name="OptionalId"/>
      <ref name="QuoteAttr"/>
      <ref name="QuoteNoIdBody"/>
    </element>
  </define>
  <define name="QuoteAttr">
    <optional>
      <attribute name="alignment">
        <ref name="Alignments"/>
      </attribute>
    </optional>
  </define>
  <define name="QuoteBody">
    <optional>
      <ref name="quote-source"/>
    </optional>
    <optional>
      <ref name="quote-author"/>
    </optional>
    <oneOrMore>
      <ref name="paragraph-with-footnote"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="QuoteNoIdBody">
    <optional>
      <ref name="quote-source"/>
    </optional>
    <optional>
      <ref name="quote-author"/>
    </optional>
    <oneOrMore>
      <ref name="paragraph-with-footnote-no-id"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="quote-source">
    <element name="source">
      <ref name="erefType"/>
    </element>
  </define>
  <define name="quote-author">
    <element name="author">
      <text/>
    </element>
  </define>
  <define name="sourcecode">
    <element name="sourcecode">
      <ref name="RequiredId"/>
      <ref name="SourceAttr"/>
      <ref name="SourceBody"/>
    </element>
  </define>
  <define name="sourcecode-no-id">
    <element name="sourcecode">
      <ref name="OptionalId"/>
      <ref name="SourceAttr"/>
      <ref name="SourceNoIdBody"/>
    </element>
  </define>
  <define name="SourceAttr">
    <ref name="NumberingAttributes"/>
    <optional>
      <attribute name="lang">
        <ref name="LanguageType"/>
      </attribute>
    </optional>
  </define>
  <define name="SourceBody">
    <optional>
      <ref name="tname"/>
    </optional>
    <oneOrMore>
      <choice>
        <text/>
        <ref name="callout"/>
      </choice>
    </oneOrMore>
    <zeroOrMore>
      <ref name="annotation"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="SourceNoIdBody">
    <optional>
      <ref name="tname"/>
    </optional>
    <oneOrMore>
      <choice>
        <text/>
        <ref name="callout"/>
      </choice>
    </oneOrMore>
    <zeroOrMore>
      <ref name="annotation"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="pre">
    <element name="pre">
      <ref name="RequiredId"/>
      <ref name="PreAttr"/>
      <ref name="PreBody"/>
    </element>
  </define>
  <define name="pre-no-id">
    <element name="pre">
      <ref name="OptionalId"/>
      <ref name="PreAttr"/>
      <ref name="PreNoIdBody"/>
    </element>
  </define>
  <define name="PreAttr">
    <optional>
      <attribute name="alt"/>
    </optional>
  </define>
  <define name="PreBody">
    <optional>
      <ref name="tname"/>
    </optional>
    <text/>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="PreNoIdBody">
    <optional>
      <ref name="tname"/>
    </optional>
    <text/>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="table">
    <a:documentation>Tabular arrangement of text</a:documentation>
    <element name="table">
      <ref name="RequiredId"/>
      <ref name="TableAttr"/>
      <ref name="TableBody"/>
    </element>
  </define>
  <define name="table-no-id">
    <a:documentation>Tabular arrangement of text: optional ID attributes recursively (for use in Relaton, metadata)</a:documentation>
    <element name="table">
      <ref name="OptionalId"/>
      <ref name="TableAttr"/>
      <ref name="TableNoIdBody"/>
    </element>
  </define>
  <define name="TableAttr">
    <ref name="NumberingAttributes"/>
    <optional>
      <attribute name="alt">
        <a:documentation>Accessible description of the tabular text, in case the table cannot be rendered accessibly (HTML 5)</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="summary">
        <a:documentation>Alternative more extensive summary of table to be provided for accessibility purposes, 
in case the table cannot be rendered accessibly (HTML 5)</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="uri">
        <a:documentation>Online location of content of table (in case the table is available as a separate external document) (HTML 5)</a:documentation>
        <data type="anyURI"/>
      </attribute>
    </optional>
  </define>
  <define name="TableBody">
    <a:documentation>Elements of table</a:documentation>
    <optional>
      <ref name="tname">
        <a:documentation>Caption for the table</a:documentation>
      </ref>
    </optional>
    <optional>
      <ref name="thead">
        <a:documentation>Table rows constituting the table header</a:documentation>
      </ref>
    </optional>
    <ref name="tbody">
      <a:documentation>Table rows constituting the table body</a:documentation>
    </ref>
    <optional>
      <ref name="tfoot">
        <a:documentation>Table rows constituting the table footer</a:documentation>
      </ref>
    </optional>
    <optional>
      <ref name="dl">
        <a:documentation>Definitions list defining any symbols used in the table</a:documentation>
      </ref>
    </optional>
    <zeroOrMore>
      <ref name="table-note">
        <a:documentation>Notes specific to this block</a:documentation>
      </ref>
    </zeroOrMore>
  </define>
  <define name="TableNoIdBody">
    <a:documentation>Elements of table: optional ID attributes recursively (for use in Relaton, metadata)</a:documentation>
    <optional>
      <ref name="tname">
        <a:documentation>Caption for the table</a:documentation>
      </ref>
    </optional>
    <optional>
      <ref name="thead-no-id">
        <a:documentation>Table rows constituting the table header</a:documentation>
      </ref>
    </optional>
    <ref name="tbody-no-id">
      <a:documentation>Table rows constituting the table body</a:documentation>
    </ref>
    <optional>
      <ref name="tfoot-no-id">
        <a:documentation>Table rows constituting the table footer</a:documentation>
      </ref>
    </optional>
    <optional>
      <ref name="dl-no-id">
        <a:documentation>Definitions list defining any symbols used in the table</a:documentation>
      </ref>
    </optional>
    <zeroOrMore>
      <ref name="table-note-no-id">
        <a:documentation>Notes specific to this block</a:documentation>
      </ref>
    </zeroOrMore>
  </define>
  <define name="tname">
    <element name="name">
      <oneOrMore>
        <ref name="NestedTextElement"/>
      </oneOrMore>
    </element>
  </define>
  <define name="thead">
    <element name="thead">
      <ref name="tr"/>
    </element>
  </define>
  <define name="thead-no-id">
    <element name="thead">
      <ref name="tr-no-id"/>
    </element>
  </define>
  <define name="tfoot">
    <element name="tfoot">
      <ref name="tr"/>
    </element>
  </define>
  <define name="tfoot-no-id">
    <element name="tfoot">
      <ref name="tr-no-id"/>
    </element>
  </define>
  <define name="tbody">
    <element name="tbody">
      <oneOrMore>
        <ref name="tr"/>
      </oneOrMore>
    </element>
  </define>
  <define name="tbody-no-id">
    <element name="tbody">
      <oneOrMore>
        <ref name="tr-no-id"/>
      </oneOrMore>
    </element>
  </define>
  <define name="table-note">
    <element name="note">
      <ref name="paragraph"/>
    </element>
  </define>
  <define name="table-note-no-id">
    <element name="note">
      <ref name="paragraph-no-id"/>
    </element>
  </define>
  <define name="tr">
    <a:documentation>Sequence of cells to be displayed as a row in a table</a:documentation>
    <element name="tr">
      <oneOrMore>
        <choice>
          <ref name="td">
            <a:documentation>Data cells in a table row</a:documentation>
          </ref>
          <ref name="th">
            <a:documentation>Header cells in a table row</a:documentation>
          </ref>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="tr-no-id">
    <element name="tr">
      <oneOrMore>
        <choice>
          <ref name="td-no-id"/>
          <ref name="th-no-id"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="td">
    <a:documentation>Textual content constituting a basic building block of a table</a:documentation>
    <element name="td">
      <ref name="TdAttr"/>
      <ref name="TdBody"/>
    </element>
  </define>
  <define name="td-no-id">
    <a:documentation>Textual content constituting a basic building block of a table: optional ID attributes recursively (for use in Relaton, metadata)</a:documentation>
    <element name="td">
      <ref name="TdAttr"/>
      <ref name="TdNoIdBody"/>
    </element>
  </define>
  <define name="TdAttr">
    <optional>
      <attribute name="colspan">
        <a:documentation>Number of columns in the underlying table grid which the cell spans</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="rowspan">
        <a:documentation>Number of rows in the underlying table grid which the cell spans</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="align">
        <a:documentation>Horizontal textual alignment of the cell against the underlying table grid</a:documentation>
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="valign">
        <a:documentation>Vertical alignment of the cell against the underlying table grid</a:documentation>
        <choice>
          <value>top</value>
          <value>middle</value>
          <value>bottom</value>
          <value>baseline</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="TdBody">
    <choice>
      <zeroOrMore>
        <group>
          <a:documentation>Table cell is a block</a:documentation>
          <ref name="TextElement"/>
        </group>
      </zeroOrMore>
      <oneOrMore>
        <ref name="paragraph-with-footnote">
          <a:documentation>Table cell contains a block</a:documentation>
        </ref>
      </oneOrMore>
    </choice>
  </define>
  <define name="TdNoIdBody">
    <choice>
      <zeroOrMore>
        <ref name="TextElement"/>
      </zeroOrMore>
      <oneOrMore>
        <ref name="paragraph-with-footnote-no-id"/>
      </oneOrMore>
    </choice>
  </define>
  <define name="th">
    <element name="th">
      <ref name="ThAttr"/>
      <ref name="ThBody"/>
    </element>
  </define>
  <define name="th-no-id">
    <element name="th">
      <ref name="ThAttr"/>
      <ref name="ThNoIdBody"/>
    </element>
  </define>
  <define name="ThAttr">
    <ref name="TdAttr"/>
  </define>
  <define name="ThBody">
    <ref name="TdBody"/>
  </define>
  <define name="ThNoIdBody">
    <ref name="TdNoIdBody"/>
  </define>
  <define name="example">
    <element name="example">
      <ref name="RequiredId"/>
      <ref name="ExampleAttr"/>
      <ref name="ExampleBody"/>
    </element>
  </define>
  <define name="example-no-id">
    <element name="example">
      <ref name="OptionalId"/>
      <ref name="ExampleAttr"/>
      <ref name="ExampleNoIdBody"/>
    </element>
  </define>
  <define name="ExampleAttr">
    <ref name="NumberingAttributes"/>
  </define>
  <define name="ExampleBody">
    <optional>
      <ref name="tname"/>
    </optional>
    <oneOrMore>
      <choice>
        <ref name="formula"/>
        <ref name="ul"/>
        <ref name="ol"/>
        <ref name="dl"/>
        <ref name="quote"/>
        <ref name="sourcecode"/>
        <ref name="paragraph-with-footnote"/>
      </choice>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="ExampleNoIdBody">
    <optional>
      <ref name="tname"/>
    </optional>
    <oneOrMore>
      <choice>
        <ref name="formula-no-id"/>
        <ref name="ul-no-id"/>
        <ref name="ol-no-id"/>
        <ref name="dl-no-id"/>
        <ref name="quote-no-id"/>
        <ref name="sourcecode-no-id"/>
        <ref name="paragraph-with-footnote-no-id"/>
      </choice>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="admonition">
    <a:documentation>A sidebar block outside of the main flow of text, conveying particular warnings or supplementary text to the reader</a:documentation>
    <element name="admonition">
      <ref name="RequiredId"/>
      <ref name="AdmonitionAttr"/>
      <ref name="AdmonitionBody"/>
    </element>
  </define>
  <define name="admonition-no-id">
    <element name="admonition">
      <ref name="OptionalId"/>
      <ref name="AdmonitionAttr"/>
      <ref name="AdmonitionNoIdBody"/>
    </element>
  </define>
  <define name="AdmonitionAttr">
    <attribute name="type">
      <a:documentation>Subclass of admonition determining how it is to be rendered. 
Distinct admonition types are often associated with distinct icons or rendering</a:documentation>
      <ref name="AdmonitionType"/>
    </attribute>
    <optional>
      <attribute name="class">
        <a:documentation>Subclass of admonition, allowing different runs of admonitions to be labelled
and auto-numbered differently, even if they are of the same type.
Typically is a subclass of an admonition type</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="uri">
        <a:documentation>Location where the content of the admonition is accessible as an external document</a:documentation>
        <data type="anyURI"/>
      </attribute>
    </optional>
  </define>
  <define name="AdmonitionBody">
    <optional>
      <ref name="tname">
        <a:documentation>Caption of admonition</a:documentation>
      </ref>
    </optional>
    <zeroOrMore>
      <ref name="paragraph-with-footnote"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="AdmonitionNoIdBody">
    <optional>
      <ref name="tname"/>
    </optional>
    <zeroOrMore>
      <ref name="paragraph-with-footnote-no-id"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="AdmonitionType">
    <a:documentation>Subclass of admonition determining how it is to be rendered</a:documentation>
    <choice>
      <value>warning</value>
      <a:documentation>Warning to reader, note of risk to be avoided</a:documentation>
      <value>note</value>
      <a:documentation>Supplementary, explanatory information</a:documentation>
      <value>tip</value>
      <a:documentation>Instructive information to assist in the fulfilment of tasks related to content</a:documentation>
      <value>important</value>
      <a:documentation>Note to reader of something crucial to be borne in mind</a:documentation>
      <value>caution</value>
      <a:documentation>Caution to reader, note of potential surprise or difficulty</a:documentation>
    </choice>
  </define>
  <define name="figure">
    <element name="figure">
      <ref name="RequiredId"/>
      <ref name="FigureAttr"/>
      <ref name="FigureBody"/>
    </element>
  </define>
  <define name="figure-no-id">
    <element name="figure">
      <ref name="OptionalId"/>
      <ref name="FigureAttr"/>
      <ref name="FigureNoIdBody"/>
    </element>
  </define>
  <define name="FigureAttr">
    <ref name="NumberingAttributes"/>
    <optional>
      <attribute name="class"/>
    </optional>
  </define>
  <define name="FigureBody">
    <optional>
      <ref name="source"/>
    </optional>
    <optional>
      <ref name="tname"/>
    </optional>
    <choice>
      <ref name="image"/>
      <ref name="video"/>
      <ref name="audio"/>
      <ref name="pre"/>
      <oneOrMore>
        <ref name="paragraph-with-footnote"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="figure"/>
      </zeroOrMore>
    </choice>
    <zeroOrMore>
      <ref name="fn"/>
    </zeroOrMore>
    <optional>
      <ref name="dl"/>
    </optional>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="FigureNoIdBody">
    <optional>
      <ref name="source"/>
    </optional>
    <optional>
      <ref name="tname"/>
    </optional>
    <choice>
      <ref name="image-no-id"/>
      <ref name="video-no-id"/>
      <ref name="audio-no-id"/>
      <ref name="pre-no-id"/>
      <oneOrMore>
        <ref name="paragraph-with-footnote-no-id"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="figure-no-id"/>
      </zeroOrMore>
    </choice>
    <zeroOrMore>
      <ref name="fn"/>
    </zeroOrMore>
    <optional>
      <ref name="dl-no-id"/>
    </optional>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="TextElement">
    <a:documentation>Any inline element containing text and associated formatting information.
Includes inline elements that are identifiers or references to identifiers</a:documentation>
    <choice>
      <text/>
      <ref name="em"/>
      <ref name="eref"/>
      <ref name="strong"/>
      <ref name="stem"/>
      <ref name="sub"/>
      <ref name="sup"/>
      <ref name="tt"/>
      <ref name="underline"/>
      <ref name="keyword"/>
      <ref name="ruby"/>
      <ref name="strike"/>
      <ref name="smallcap"/>
      <ref name="xref"/>
      <ref name="br"/>
      <ref name="hyperlink"/>
      <ref name="hr"/>
      <ref name="pagebreak"/>
      <ref name="bookmark"/>
      <ref name="image"/>
      <ref name="index"/>
      <ref name="index-xref"/>
    </choice>
  </define>
  <define name="PureTextElement">
    <a:documentation>Inline element containing text and associated formatting information,
but which does not contain any associated identifiers or references to identifiers.
Restricted recursively to contain only other such inline elements with no identifiers or references to identifiers</a:documentation>
    <choice>
      <text/>
      <ref name="pure_em"/>
      <ref name="pure_strong"/>
      <ref name="sub"/>
      <ref name="sup"/>
      <ref name="pure_tt"/>
      <ref name="pure_underline"/>
      <ref name="pure_strike"/>
      <ref name="pure_smallcap"/>
      <ref name="br"/>
    </choice>
  </define>
  <define name="NestedTextElement">
    <a:documentation>Contents of TextElement tags: leaves out tags that should occur only at top level of block: bookmark image hr pagebreak</a:documentation>
    <choice>
      <ref name="PureTextElement"/>
      <ref name="stem"/>
      <ref name="eref"/>
      <ref name="xref"/>
      <ref name="hyperlink"/>
      <ref name="index"/>
      <ref name="index-xref"/>
      <ref name="ruby"/>
      <ref name="keyword"/>
    </choice>
  </define>
  <define name="source">
    <element name="source">
      <ref name="TypedUri"/>
    </element>
  </define>
  <define name="em">
    <a:documentation>Emphasised text. Corresponds to HTML `em`, `i`</a:documentation>
    <element name="em">
      <zeroOrMore>
        <ref name="NestedTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="pure_em">
    <a:documentation>Emphasised text for PureTextElement</a:documentation>
    <element name="em">
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="strong">
    <a:documentation>Strong text. Corresponds to HTML `strong`, `b`</a:documentation>
    <element name="strong">
      <zeroOrMore>
        <ref name="NestedTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="pure_strong">
    <a:documentation>Strong text for PureTextElement</a:documentation>
    <element name="strong">
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="tt">
    <a:documentation>Monospace text. Corresponds to HTML `tt`, `code`</a:documentation>
    <element name="tt">
      <zeroOrMore>
        <ref name="NestedTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="pure_tt">
    <a:documentation>Monospace text for PureTextElement</a:documentation>
    <element name="tt">
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="keyword">
    <a:documentation>Keyword text</a:documentation>
    <element name="keyword">
      <zeroOrMore>
        <choice>
          <ref name="PureTextElement"/>
          <ref name="index"/>
          <ref name="index-xref"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="sub">
    <a:documentation>Subscript text. Corresponds to HTML `sub`</a:documentation>
    <element name="sub">
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="sup">
    <a:documentation>Superscript text. Corresponds to HTML `sup`</a:documentation>
    <element name="sup">
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="strike">
    <a:documentation>Strikethrough text. Corresponds to HTML 4 `s`</a:documentation>
    <element name="strike">
      <zeroOrMore>
        <ref name="NestedTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="pure_strike">
    <a:documentation>Strikethrough for PureTextElement</a:documentation>
    <element name="strike">
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="underline">
    <a:documentation>Underlined text. Corresponds to HTML 4 `u`</a:documentation>
    <element name="underline">
      <optional>
        <attribute name="style">
          <a:documentation>CSS style to apply to underline (intended for text-decoration-style attribute keyword values: solid double dotted dashed wavy)</a:documentation>
        </attribute>
      </optional>
      <zeroOrMore>
        <ref name="NestedTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="pure_underline">
    <a:documentation>Underlined text for PureTextElement</a:documentation>
    <element name="underline">
      <optional>
        <attribute name="style"/>
      </optional>
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="smallcap">
    <a:documentation>Small caps text</a:documentation>
    <element name="smallcap">
      <zeroOrMore>
        <ref name="NestedTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="pure_smallcap">
    <a:documentation>Small caps text for PureTextElement</a:documentation>
    <element name="smallcap">
      <zeroOrMore>
        <ref name="PureTextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="ruby">
    <a:documentation>Text with Ruby annotations in East Asian languages. Corresponds to HTML `ruby`</a:documentation>
    <element name="ruby">
      <choice>
        <ref name="ruby_pronunciation">
          <a:documentation>Ruby annotation giving pronunciation</a:documentation>
        </ref>
        <ref name="ruby_annotation">
          <a:documentation>Ruby annotation giving other (semantic) information</a:documentation>
        </ref>
      </choice>
      <choice>
        <text>
          <a:documentation>Ruby annotated text which contains no further annotations</a:documentation>
        </text>
        <ref name="ruby">
          <a:documentation>Ruby annotated text which itself contains other Ruby annotations</a:documentation>
        </ref>
      </choice>
    </element>
  </define>
  <define name="ruby_pronunciation">
    <a:documentation>Ruby annotation giving pronunciation of text</a:documentation>
    <element name="pronunciation">
      <attribute name="value">
        <a:documentation>Ruby annotation value</a:documentation>
      </attribute>
      <optional>
        <attribute name="script">
          <ref name="ScriptType"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="lang">
          <ref name="LanguageType"/>
        </attribute>
      </optional>
    </element>
  </define>
  <define name="ruby_annotation">
    <a:documentation>Ruby annotation giving information other than pronunciation of text</a:documentation>
    <element name="annotation">
      <attribute name="value">
        <a:documentation>Ruby annotation value</a:documentation>
      </attribute>
      <optional>
        <attribute name="script">
          <ref name="ScriptType"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="lang">
          <ref name="LanguageType"/>
        </attribute>
      </optional>
    </element>
  </define>
  <define name="br">
    <element name="br">
      <empty/>
    </element>
  </define>
  <define name="hr">
    <element name="hr">
      <empty/>
    </element>
  </define>
  <define name="pagebreak">
    <element name="pagebreak">
      <empty/>
    </element>
  </define>
  <define name="index">
    <element name="index">
      <optional>
        <attribute name="to">
          <data type="IDREF"/>
        </attribute>
      </optional>
      <element name="primary">
        <oneOrMore>
          <ref name="PureTextElement"/>
        </oneOrMore>
      </element>
      <optional>
        <element name="secondary">
          <oneOrMore>
            <ref name="PureTextElement"/>
          </oneOrMore>
        </element>
      </optional>
      <optional>
        <element name="tertiary">
          <oneOrMore>
            <ref name="PureTextElement"/>
          </oneOrMore>
        </element>
      </optional>
    </element>
  </define>
  <define name="index-xref">
    <a:documentation>A reference to an index term, cross-referenced within an index as an
alternative index entry, either as a "see" or a "see also" cross-reference.
The text in the inline element is the primary index term to be be cross-referenced</a:documentation>
    <element name="index-xref">
      <attribute name="also">
        <a:documentation>The cross-reference is to be treated as "see also" rather than as "see"</a:documentation>
        <data type="boolean"/>
      </attribute>
      <element name="primary">
        <a:documentation>The primary index term to be cross-referenced</a:documentation>
        <oneOrMore>
          <ref name="PureTextElement"/>
        </oneOrMore>
      </element>
      <optional>
        <element name="secondary">
          <a:documentation>The secondary index term to be cross-referenced</a:documentation>
          <oneOrMore>
            <ref name="PureTextElement"/>
          </oneOrMore>
        </element>
      </optional>
      <optional>
        <element name="tertiary">
          <a:documentation>The tertiary index term to be cross-referenced</a:documentation>
          <oneOrMore>
            <ref name="PureTextElement"/>
          </oneOrMore>
        </element>
      </optional>
      <element name="target">
        <a:documentation>The index term to be cross-referenced to</a:documentation>
        <oneOrMore>
          <ref name="PureTextElement"/>
        </oneOrMore>
      </element>
    </element>
  </define>
  <!-- bare ID element, used for referencing arbitrary spans of text -->
  <define name="bookmark">
    <element name="bookmark">
      <ref name="RequiredId"/>
      <empty/>
    </element>
  </define>
  <define name="ReferenceFormat">
    <a:documentation>The type of Reference Element, prescribing how it is to be rendered</a:documentation>
    <choice>
      <value>external</value>
      <a:documentation>Reference to an external document</a:documentation>
      <value>inline</value>
      <a:documentation>Reference to another element in the same document</a:documentation>
      <value>footnote</value>
      <a:documentation>Inline reference to a block to be rendered as a footnote</a:documentation>
      <value>callout</value>
      <a:documentation>Inline reference to a block to be referenced as a sourcecode callout</a:documentation>
    </choice>
  </define>
  <define name="eref">
    <a:documentation>An external reference to a bibliographic entity</a:documentation>
    <element name="eref">
      <ref name="erefType"/>
    </element>
  </define>
  <define name="erefType">
    <optional>
      <attribute name="normative">
        <a:documentation>Whether the reference is to be treated as normative or informative, particularly in the context of normative documents such as standards</a:documentation>
        <data type="boolean"/>
      </attribute>
    </optional>
    <attribute name="citeas">
      <a:documentation>Form that the bibliographic citation should take when it is rendered</a:documentation>
    </attribute>
    <attribute name="type">
      <a:documentation>The type of Reference Element, prescribing how it is to be rendered</a:documentation>
      <ref name="ReferenceFormat"/>
    </attribute>
    <optional>
      <attribute name="alt">
        <a:documentation>Alternate text, used for accessibility</a:documentation>
      </attribute>
    </optional>
    <ref name="CitationType">
      <a:documentation>Reference cross-reference: modelled as cross-reference to the corresponding bibliographical item in a References section</a:documentation>
    </ref>
    <oneOrMore>
      <ref name="PureTextElement">
        <a:documentation>The textual content of the element. The `text` is what we wish to show the link as (e.g., the "content" of `&lt;xx&gt;my link text&lt;/xx&gt;`)</a:documentation>
      </ref>
    </oneOrMore>
  </define>
  <define name="hyperlink">
    <a:documentation>A reference to an external document or resource</a:documentation>
    <element name="link">
      <attribute name="target">
        <a:documentation>The location or online identifier of the external document or resource</a:documentation>
        <data type="anyURI"/>
      </attribute>
      <attribute name="type">
        <a:documentation>The type of Reference Element, prescribing how it is to be rendered</a:documentation>
        <ref name="ReferenceFormat"/>
      </attribute>
      <optional>
        <attribute name="alt">
          <a:documentation>Alternate text, used for accessibility</a:documentation>
        </attribute>
      </optional>
      <oneOrMore>
        <ref name="PureTextElement">
          <a:documentation>The textual content of the element. The `text` is what we wish to show the link as (e.g., the "content" of `&lt;xx&gt;my link text&lt;/xx&gt;`)</a:documentation>
        </ref>
      </oneOrMore>
    </element>
  </define>
  <define name="xref">
    <a:documentation>Inline element, which references an identifier of a document, a block in a document, or an element in a document</a:documentation>
    <element name="xref">
      <attribute name="target">
        <a:documentation>The identifier of a section, block or inlined element being referenced</a:documentation>
        <data type="IDREF"/>
      </attribute>
      <attribute name="type">
        <a:documentation>The type of Reference Element, prescribing how it is to be rendered</a:documentation>
        <ref name="ReferenceFormat"/>
      </attribute>
      <optional>
        <attribute name="alt">
          <a:documentation>Alternate text, used for accessibility</a:documentation>
        </attribute>
      </optional>
      <oneOrMore>
        <ref name="PureTextElement">
          <a:documentation>The textual content of the element. The `text` is what we wish to show the link as (e.g., the "content" of `&lt;xx&gt;my link text&lt;/xx&gt;`)</a:documentation>
        </ref>
      </oneOrMore>
    </element>
  </define>
  <define name="fn">
    <a:documentation>Inline reference to a paragraph or paragraphs, appearing as a footnote.
The target of a footnote is the location it is embedded in within the text</a:documentation>
    <element name="fn">
      <attribute name="reference">
        <a:documentation>The number of the footnote, used to identify it visually</a:documentation>
      </attribute>
      <oneOrMore>
        <ref name="paragraph">
          <a:documentation>The content of the footnote</a:documentation>
        </ref>
      </oneOrMore>
    </element>
  </define>
  <define name="callout">
    <a:documentation>Inline reference to a paragraph or paragraphs, appearing as annotation of source code</a:documentation>
    <element name="callout">
      <attribute name="target">
        <a:documentation>The target of the callout is understood to be the location of the callout within the source code; 
the extent of the target is not expressed overtly</a:documentation>
        <data type="IDREF"/>
      </attribute>
      <text>
        <a:documentation>The label of the callout, used to identify its target within the source code</a:documentation>
      </text>
    </element>
  </define>
  <!--
    This is xref with fixed @type="callout"; the target by convention is in an annotation in the same source code snippet
    so <callout target="xyz">1</callout>
    corresponds to <xref type="callout" target="xyz">1</xref>
  -->
  <define name="image">
    <element name="image">
      <ref name="RequiredId"/>
      <ref name="ImageAttr"/>
    </element>
  </define>
  <define name="image-no-id">
    <element name="image">
      <ref name="OptionalId"/>
      <ref name="ImageAttr"/>
    </element>
  </define>
  <define name="ImageAttr">
    <attribute name="src">
      <data type="anyURI"/>
    </attribute>
    <attribute name="mimetype"/>
    <optional>
      <attribute name="filename"/>
    </optional>
    <optional>
      <attribute name="width">
        <ref name="ImageSize"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="height">
        <ref name="ImageSize"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="alt"/>
    </optional>
    <optional>
      <attribute name="title"/>
    </optional>
    <optional>
      <attribute name="longdesc">
        <data type="anyURI"/>
      </attribute>
    </optional>
  </define>
  <define name="ImageSize">
    <choice>
      <data type="string">
        <param name="pattern">\d+([.]\d+)?(%?)</param>
      </data>
      <value>auto</value>
    </choice>
  </define>
  <define name="video">
    <element name="video">
      <ref name="RequiredId"/>
      <ref name="VideoAttr"/>
      <ref name="VideoBody"/>
    </element>
  </define>
  <define name="video-no-id">
    <element name="video">
      <ref name="OptionalId"/>
      <ref name="VideoAttr"/>
      <ref name="VideoBody"/>
    </element>
  </define>
  <define name="VideoAttr">
    <attribute name="src">
      <data type="anyURI"/>
    </attribute>
    <attribute name="mimetype"/>
    <optional>
      <attribute name="filename"/>
    </optional>
    <optional>
      <attribute name="width">
        <choice>
          <data type="int"/>
          <value>auto</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="height">
        <choice>
          <data type="int"/>
          <value>auto</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="alt"/>
    </optional>
    <optional>
      <attribute name="title"/>
    </optional>
    <optional>
      <attribute name="longdesc">
        <data type="anyURI"/>
      </attribute>
    </optional>
  </define>
  <define name="VideoBody">
    <zeroOrMore>
      <ref name="altsource"/>
    </zeroOrMore>
  </define>
  <define name="audio">
    <element name="audio">
      <ref name="RequiredId"/>
      <ref name="AudioAttr"/>
      <ref name="AudioBody"/>
    </element>
  </define>
  <define name="audio-no-id">
    <element name="audio">
      <ref name="OptionalId"/>
      <ref name="AudioAttr"/>
      <ref name="AudioBody"/>
    </element>
  </define>
  <define name="AudioAttr">
    <attribute name="src">
      <data type="anyURI"/>
    </attribute>
    <attribute name="mimetype"/>
    <optional>
      <attribute name="filename"/>
    </optional>
    <optional>
      <attribute name="alt"/>
    </optional>
    <optional>
      <attribute name="title"/>
    </optional>
    <optional>
      <attribute name="longdesc">
        <data type="anyURI"/>
      </attribute>
    </optional>
  </define>
  <define name="AudioBody">
    <zeroOrMore>
      <ref name="altsource"/>
    </zeroOrMore>
  </define>
  <define name="altsource">
    <element name="altsource">
      <attribute name="src">
        <data type="anyURI"/>
      </attribute>
      <attribute name="mimetype"/>
      <optional>
        <attribute name="filename"/>
      </optional>
    </element>
  </define>
  <define name="stem">
    <a:documentation>Mathematically formatted text</a:documentation>
    <element name="stem">
      <attribute name="type">
        <a:documentation>The notation used to mathematically format the text</a:documentation>
        <choice>
          <value>MathML</value>
          <value>AsciiMath</value>
          <value>LaTeX</value>
        </choice>
      </attribute>
      <oneOrMore>
        <choice>
          <a:documentation>The content of the mathematically formatted text</a:documentation>
          <text/>
          <ref name="AnyElement"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="annotation">
    <element name="annotation">
      <ref name="RequiredId"/>
      <ref name="paragraph"/>
    </element>
  </define>
  <define name="ul">
    <element name="ul">
      <ref name="RequiredId"/>
      <ref name="UlAttr"/>
      <ref name="UlBody"/>
    </element>
  </define>
  <define name="ul-no-id">
    <element name="ul">
      <ref name="OptionalId"/>
      <ref name="UlAttr"/>
      <ref name="UlNoIdBody"/>
    </element>
  </define>
  <define name="UlAttr">
    <empty/>
  </define>
  <define name="UlBody">
    <oneOrMore>
      <ref name="li"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="UlNoIdBody">
    <oneOrMore>
      <ref name="li-no-id"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="li">
    <element name="li">
      <ref name="OptionalId"/>
      <ref name="LiAttr"/>
      <ref name="LiBody"/>
    </element>
  </define>
  <define name="li-no-id">
    <element name="li">
      <ref name="OptionalId"/>
      <ref name="LiAttr"/>
      <ref name="LiNoIdBody"/>
    </element>
  </define>
  <define name="LiAttr">
    <empty/>
  </define>
  <define name="LiBody">
    <oneOrMore>
      <ref name="paragraph-with-footnote"/>
    </oneOrMore>
  </define>
  <define name="LiNoIdBody">
    <oneOrMore>
      <ref name="paragraph-with-footnote-no-id"/>
    </oneOrMore>
  </define>
  <define name="ol">
    <element name="ol">
      <ref name="RequiredId"/>
      <ref name="OlAttr"/>
      <ref name="OlBody"/>
    </element>
  </define>
  <define name="ol-no-id">
    <element name="ol">
      <ref name="OptionalId"/>
      <ref name="OlAttr"/>
      <ref name="OlNoIdBody"/>
    </element>
  </define>
  <define name="OlAttr">
    <attribute name="type">
      <choice>
        <value>roman</value>
        <value>alphabet</value>
        <value>arabic</value>
        <value>roman_upper</value>
        <value>alphabet_upper</value>
      </choice>
    </attribute>
    <optional>
      <attribute name="start"/>
    </optional>
  </define>
  <define name="OlBody">
    <oneOrMore>
      <ref name="li"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="OlNoIdBody">
    <oneOrMore>
      <ref name="li-no-id"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="dl">
    <element name="dl">
      <ref name="RequiredId"/>
      <ref name="DlAttr"/>
      <ref name="DlBody"/>
    </element>
  </define>
  <define name="dl-no-id">
    <element name="dl">
      <ref name="OptionalId"/>
      <ref name="DlNoIdBody"/>
    </element>
  </define>
  <define name="DlAttr">
    <empty/>
  </define>
  <define name="DlBody">
    <oneOrMore>
      <ref name="dt"/>
      <ref name="dd"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note"/>
    </zeroOrMore>
  </define>
  <define name="DlNoIdBody">
    <oneOrMore>
      <ref name="dt"/>
      <ref name="dd-no-id"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="note-no-id"/>
    </zeroOrMore>
  </define>
  <define name="dt">
    <element name="dt">
      <zeroOrMore>
        <ref name="TextElement"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="dd">
    <element name="dd">
      <zeroOrMore>
        <ref name="paragraph-with-footnote"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="dd-no-id">
    <element name="dd">
      <zeroOrMore>
        <ref name="paragraph-with-footnote-no-id"/>
      </zeroOrMore>
    </element>
  </define>
</grammar>
