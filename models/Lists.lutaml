diagram Lists {
  class BasicBlock {}

  class List{
    +listitem: ListItem[0..*]
  }

  class Listitem{
    +id: string[0..1]
    +content: ParagraphWithFootnote[0..*]
  }

  class UnorderedList {}

  class OrderedList{
    +type: OrderedListType
    +start: string[0..1]
  }

  class DefinitionList{
    +listitem: Definition[0..*]
  }

  class Definition{
    +item: TextElement[0..*]
    +definition: ParagraphWithFootnote[0..*]
  }

  enum OrderedListType {
    roman
    alphabet
    arabic
    roman_upper
    alphabet_upper
  }

  association {
    owner BasicBlock
    member List
    owner_type inheritance
  }

  association {
    owner Listitem
    member List
    member_type direct
  }
  association {
    owner List
    member UnorderedList
    owner_type inheritance
  }
  association {
    owner List
    member DefinitionList
    owner_type inheritance
  }

  association {
    owner Definition
    member DefinitionList
    member_type direct
  }

  association {
    owner UnorderedList
    member OrderedList
    owner_type inheritance
  }

  association {
    owner OrderedListType
    member OrderedList
    member_type direct
  }
}
